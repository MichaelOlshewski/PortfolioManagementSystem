{"version":3,"sources":["components/Navbar/index.jsx","components/Landing/index.jsx","utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/auth/Register.js","components/auth/Login.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/private-route/PrivateRoute.js","pages/dashboard/index.js","App.js","index.js"],"names":["Navbar","className","to","style","fontFamily","Component","Landing","height","width","borderRadius","letterSpacing","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","state","email","password","password2","console","log","props","registerUser","history","errors","this","auth","isAuthenticated","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","isEmpty","require","initialState","user","loading","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","component","rest","render","Dashboard","onLogoutClick","split","onClick","jwtToken","currentTime","Date","now","exp","alert","location","href","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"mPAkBeA,E,uKAZP,OACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAO,CAACC,WAAY,aAAcH,UAAU,uCAAzD,e,GANHI,aC2BNC,E,uKA1BP,OACI,yBAAKH,MAAO,CAAEI,OAAQ,QAASN,UAAU,4BACrC,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,4BACI,oCADJ,6BAC2C,IACvC,0BAAME,MAAO,CAAEC,WAAY,cAA3B,QAFJ,sBAKA,uBAAGH,UAAU,qCAAb,oFAGA,6BACA,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAMC,GAAG,YAAYC,MAAO,CAACK,MAAO,QAASC,aAAc,MAAOC,cAAe,SAAUT,UAAU,kEAArG,aAEJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAMC,GAAG,SAASC,MAAO,CAACK,MAAO,QAASC,aAAc,MAAOC,cAAe,SAAUT,UAAU,wDAAlG,iB,GAnBNI,a,yCCSPM,EAVM,SAAAC,GACbA,EAEAC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,gB,QCyBFC,EAAiB,SAAAC,GAC1B,MAAO,CACHC,KCjCwB,mBDkCxBC,QAASF,IAYJG,EAAa,kBAAM,SAAAC,GAE5BC,aAAaC,WAAW,YAGxBb,GAAa,GAGbW,EAASL,EAAe,O,iBEhDtBQ,E,kDACF,aAAe,IAAD,8BACV,gBA0BJC,SAAW,SAAAC,GACP,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,SA5B9B,EA+BdC,SAAW,SAAAL,GACPA,EAAEM,iBAEF,IAAMC,EAAU,CACZC,KAAM,EAAKC,MAAMD,KACjBE,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,SACrBC,UAAW,EAAKH,MAAMG,WAG1BC,QAAQC,IAAIP,GAEZ,EAAKQ,MAAMC,aAAaT,EAAS,EAAKQ,MAAME,UAzC5C,EAAKR,MAAQ,CACTD,KAAM,GACNE,MAAO,GACPC,SAAU,GACVC,UAAW,GACXM,OAAQ,IAPF,E,gEAcNC,KAAKJ,MAAMK,KAAKC,iBAChBF,KAAKJ,MAAME,QAAQK,KAAK,gB,gDAINC,GAClBA,EAAUL,QACVC,KAAKlB,SAAS,CACViB,OAAQK,EAAUL,W,+BAwBpB,IACEA,EAAWC,KAAKV,MAAhBS,OAER,OACI,yBAAK5C,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,yBAAwB,kBAAC,IAAD,MAA/C,kBAEJ,yBAAKA,UAAU,UAAUE,MAAO,CAAEgD,YAAa,aAC3C,4BACI,uCADJ,UAGA,uBAAGlD,UAAU,2BAAb,4BAAgE,kBAAC,IAAD,CAAMC,GAAG,UAAT,YAEpE,0BAAMkD,YAAU,EAACpB,SAAUc,KAAKd,UAC5B,yBAAK/B,UAAU,uBACX,2BAAOyB,SAAUoB,KAAKpB,SAAUK,MAAOe,KAAKV,MAAMD,KAAMkB,MAAOR,EAAOV,KAAML,GAAG,OAAOX,KAAK,OAAOlB,UAAWqD,IAAW,GAAI,CAAEC,QAASV,EAAOV,SAC9I,2BAAOqB,QAAQ,QAAf,QACA,0BAAMvD,UAAU,YAAY4C,EAAOV,OAEvC,yBAAKlC,UAAU,uBACX,2BAAOyB,SAAUoB,KAAKpB,SAAUK,MAAOe,KAAKV,MAAMC,MAAOgB,MAAOR,EAAOR,MAAOP,GAAG,QAAQX,KAAK,QAAQlB,UAAWqD,IAAW,GAAI,CAAEC,QAASV,EAAOR,UAClJ,2BAAOmB,QAAQ,SAAf,SACA,0BAAMvD,UAAU,YAAY4C,EAAOR,QAEvC,yBAAKpC,UAAU,uBACX,2BAAOyB,SAAUoB,KAAKpB,SAAUK,MAAOe,KAAKV,MAAME,SAAUe,MAAOR,EAAOP,SAAUR,GAAG,WAAWX,KAAK,WAAWlB,UAAWqD,IAAW,GAAI,CAAEC,QAASV,EAAOP,aAC9J,2BAAOkB,QAAQ,YAAf,YACA,0BAAMvD,UAAU,YAAY4C,EAAOP,WAEvC,yBAAKrC,UAAU,uBACX,2BAAOyB,SAAUoB,KAAKpB,SAAUK,MAAOe,KAAKV,MAAMG,UAAWc,MAAOR,EAAON,UAAWT,GAAG,YAAYX,KAAK,WAAWlB,UAAWqD,IAAW,GAAI,CAAEC,QAASV,EAAON,cACjK,2BAAOiB,QAAQ,aAAf,oBACA,0BAAMvD,UAAU,YAAY4C,EAAON,YAEvC,yBAAKtC,UAAU,UAAUE,MAAO,CAACgD,YAAa,aAC1C,4BAAQhD,MAAO,CAACK,MAAO,QAASC,aAAc,MAAOC,cAAe,QAAS+C,UAAW,QAASxD,UAAU,kEAA3G,mB,GApFLI,aA0GRqD,eALS,SAAAtB,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,KACZF,OAAQT,EAAMS,UAKd,CAAEF,aF9GsB,SAACgB,EAAUf,GAAX,OAAuB,SAAAtB,GAE/CT,IAAM+C,KAAK,sBAAuBD,GAAUE,MAAK,SAAAC,GAAG,OAAIlB,EAAQK,KAAK,aAAWc,OAAM,SAAAC,GAAG,OAAI1C,EAAS,CAAEH,KCRlF,aDQoGC,QAAS4C,EAAIC,SAASC,aE0GrIR,CAGZS,YAAW1C,IC7GR2C,E,kDACF,aAAe,IAAD,8BACV,gBA2BJ1C,SAAW,SAAAC,GACP,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,SA7B9B,EAgCdC,SAAW,SAAAL,GACPA,EAAEM,iBAEF,IAAM0B,EAAW,CACbtB,MAAO,EAAKD,MAAMC,MAClBC,SAAU,EAAKF,MAAME,UAGzB,EAAKI,MAAM2B,UAAUV,GAErBnB,QAAQC,IAAIkB,IAxCZ,EAAKvB,MAAQ,CACTC,MAAO,GACPC,SAAU,GACVO,OAAQ,IALF,E,gEAWNC,KAAKJ,MAAMK,KAAKC,iBAChBF,KAAKJ,MAAME,QAAQK,KAAK,gB,gDAINC,GAClBA,EAAUH,KAAKC,iBACfF,KAAKJ,MAAME,QAAQK,KAAK,cAGxBC,EAAUL,QACVC,KAAKlB,SAAS,CACViB,OAAQK,EAAUL,W,+BAsBpB,IAEEA,EAAWC,KAAKV,MAAhBS,OAER,OACE,yBAAK5C,UAAU,aACb,yBAAKE,MAAO,CAAEsD,UAAW,QAAUxD,UAAU,OAC3C,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,yBAAwB,kBAAC,IAAD,MAA/C,iBACA,yBAAKA,UAAU,UAAUE,MAAO,CAAEgD,YAAa,aAC7C,4BACE,oCADF,UAGA,uBAAGlD,UAAU,2BAAb,0BACyB,kBAAC,IAAD,CAAMC,GAAG,aAAT,cAG3B,0BAAMkD,YAAU,EAACpB,SAAUc,KAAKd,UAC9B,yBAAK/B,UAAU,uBACb,2BAAOyB,SAAUoB,KAAKpB,SAAUK,MAAOe,KAAKV,MAAMC,MAAOgB,MAAOR,EAAOR,MAAOP,GAAG,QAAQX,KAAK,QAAQlB,UAAWqD,IAAW,GAAI,CAAEC,QAASV,EAAOR,OAASQ,EAAOyB,kBAClK,2BAAOd,QAAQ,SAAf,SACA,0BAAMvD,UAAU,YACX4C,EAAOR,MACPQ,EAAOyB,gBAGd,yBAAKrE,UAAU,uBACb,2BAAOyB,SAAUoB,KAAKpB,SAAUK,MAAOe,KAAKV,MAAME,SAAUe,MAAOR,EAAOP,SAAUR,GAAG,WAAWX,KAAK,WAAWlB,UAAWqD,IAAW,GAAI,CAAEC,QAASV,EAAOP,UAAYO,EAAO0B,sBACjL,2BAAOf,QAAQ,YAAf,YACA,0BAAMvD,UAAU,YACX4C,EAAOP,SACPO,EAAO0B,oBAGd,yBAAKtE,UAAU,UAAUE,MAAO,CAAEgD,YAAa,aAC7C,4BAAQhD,MAAO,CAAEK,MAAO,QAASC,aAAc,MAAOC,cAAe,QAAS+C,UAAW,QAAStC,KAAK,SAASlB,UAAU,kEAA1H,kB,GAjFAI,aAwGLqD,eALS,SAAAtB,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,KACZF,OAAQT,EAAMS,UAKd,CAAEwB,UHtGmB,SAAAV,GAAQ,OAAI,SAAArC,GACjCT,IAAM+C,KAAK,mBAAoBD,GAAUE,MAAK,SAAAC,GAAO,IAEzClD,EAAUkD,EAAII,KAAdtD,MACRW,aAAaiD,QAAQ,WAAY5D,GAGjCD,EAAaC,GAGb,IAAMM,EAAUuD,YAAW7D,GAG3BU,EAASL,EAAeC,OACzB6C,OAAM,SAAAC,GAAG,OAAI1C,EAAS,CACrBH,KC3BkB,aD4BlBC,QAAS4C,EAAIC,SAASC,aGoFfR,CAGbU,G,wBCjHIM,EAAUC,EAAQ,IAElBC,EAAe,CACjB5B,iBAAiB,EACjB6B,KAAM,GACNC,SAAS,GCLPF,EAAe,GCENG,cAAgB,CAC3BhC,KFKW,WAAwC,IAA/BX,EAA8B,uDAAtBwC,EAAcI,EAAQ,uCAClD,OAAQA,EAAO7D,MACX,IHVwB,mBGWpB,OAAO,2BACAiB,GADP,IAEIY,iBAAkB0B,EAAQM,EAAO5D,SACjCyD,KAAMG,EAAO5D,UAErB,IHjBoB,eGkBhB,OAAO,2BACAgB,GADP,IAEI0C,SAAS,IAEjB,QACI,OAAO1C,IElBfS,ODFW,WAAwC,IAA/BT,EAA8B,uDAAtBwC,EAAcI,EAAQ,uCAClD,OAAQA,EAAO7D,MACX,IJNkB,aIOd,OAAO6D,EAAO5D,QAClB,QACI,OAAOgB,MEHb6C,EAAa,CAACC,KAWLC,EATDC,YACVC,EALiB,GAOjBC,YACIC,IAAe,WAAf,EAAmBN,GACnBO,OAAOC,8BAAgCD,OAAOC,iC,QCIvC/B,eAJS,SAAAtB,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,QAGDW,EAZM,SAAC,GAAD,IAAcrD,EAAd,EAAGqF,UAAsB3C,EAAzB,EAAyBA,KAAS4C,EAAlC,2CACjB,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAAlD,GAAK,OAA6B,IAAzBK,EAAKC,gBAA6B,kBAAC3C,EAAcqC,GAAe,kBAAC,IAAD,CAAUxC,GAAG,kBCD7G2F,E,4MAEFC,cAAgB,SAAAnE,GACZA,EAAEM,iBACF,EAAKS,MAAMrB,c,uDAGL,IAEEwD,EAAS/B,KAAKJ,MAAMK,KAApB8B,KAER,OACI,yBAAK1E,MAAO,CAAEI,OAAQ,QAAUN,UAAU,4BACtC,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,4BACI,yCADJ,IACuB4E,EAAK1C,KAAK4D,MAAM,KAAK,GACxC,uBAAG9F,UAAU,qCAAb,mCACqC,IAAI,0BAAME,MAAO,CAACC,WAAY,cAA1B,QADzC,QAIJ,4BAAQD,MAAO,CAACK,MAAO,QAASC,aAAc,MAAOC,cAAe,QAAS+C,UAAW,QAASuC,QAASlD,KAAKgD,cAAe7F,UAAU,kEAAxI,iB,GArBAI,aAwCTqD,eAJS,SAAAtB,GAAK,MAAK,CAC9BW,KAAMX,EAAMW,QAKZ,CAAE1B,cAFSqC,CAGbmC,G,MChCF,GAAItE,aAAa0E,SAAU,CAEzB,IAAMrF,EAAQW,aAAa0E,SAC3BtF,EAAaC,GAEb,IAAMM,EAAUuD,YAAW7D,GAE3BuE,EAAM7D,SAASL,EAAeC,IAG9B,IAAMgF,EAAcC,KAAKC,MAAQ,IAC7BlF,EAAQmF,IAAMH,IAChBI,MAAM,gDAENnB,EAAM7D,SAASD,KAEfmE,OAAOe,SAASC,KAAO,WAsBZC,MAlBf,WACE,OACE,kBAAC,IAAD,CAAUtB,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKlF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOyG,OAAK,EAACC,KAAK,IAAIjB,UAAWpF,IACjC,kBAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,YAAYjB,UAAWjE,IACzC,kBAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,SAASjB,UAAWtB,IACtC,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcsC,OAAK,EAACC,KAAK,aAAajB,UAAWG,SC1C7De,IAAShB,OACP,kBAAC,IAAMiB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d50ecd3c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-fixed\">\r\n                <nav className=\"z-depth-0\">\r\n                    <div className=\"nav-wrapper white\">\r\n                        <Link to=\"/\" style={{fontFamily: \"monospace\"}} className=\"col s5 brand-logo center black-text\">Code</Link>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ height: \"75vh\"}} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4>\r\n                            <b>Build</b> a login/auth app with the{\" \"}\r\n                            <span style={{ fontFamily: \"monospace\"}}>MERN</span>\r\n                            stack from scratch\r\n                        </h4>\r\n                        <p className=\"flow-text grey-text text-darken-1\">\r\n                            Create a (minimal) full-stack app with user authentication via passport and JWTs\r\n                        </p>\r\n                        <br />\r\n                        <div className=\"col s6\">\r\n                            <Link to=\"/register\" style={{width: \"140px\", borderRadius: \"3px\", letterSpacing: \"1.5px\"}} className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">Register</Link>\r\n                        </div>\r\n                        <div className=\"col s6\">\r\n                            <Link to=\"/login\" style={{width: \"140px\", borderRadius: \"3px\", letterSpacing: \"1.5px\"}} className=\"btn btn-large btn-flat waves-effect white black-text\">Login</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing","import axios from 'axios'\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply Authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token\r\n    } else {\r\n        // Delete Auth Header\r\n        delete axios.defaults.headers.common[\"Authoroization\"];\r\n    }\r\n}\r\n\r\nexport default setAuthToken","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from './types'\r\n\r\n// Register the user\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    // Redirects to login on successful registration\r\n    axios.post(\"/api/users/register\", userData).then(res => history.push(\"/login\")).catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }))\r\n}\r\n\r\n// Login - Gets User Token\r\nexport const loginUser = userData => dispatch => {\r\n    axios.post(\"/api/users/login\", userData).then(res => {\r\n        // Saves Token to localStorage and Sets Token\r\n        const { token } = res.data\r\n        localStorage.setItem(\"jwtToken\", token)\r\n\r\n        // Set Token to Auth Header\r\n        setAuthToken(token);\r\n\r\n        // Decode Token to get userData\r\n        const decoded = jwt_decode(token);\r\n\r\n        // Set Current User\r\n        dispatch(setCurrentUser(decoded))\r\n    }).catch(err => dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n    }))\r\n}\r\n\r\n// Set Logged In User\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    }\r\n}\r\n\r\n// Loading User\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    }\r\n}\r\n\r\n// Log User Out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove Token from localStorage\r\n    localStorage.removeItem(\"jwtToken\");\r\n\r\n    // Remove Auth Header\r\n    setAuthToken(false);\r\n\r\n    // Set current user to empty object\r\n    dispatch(setCurrentUser({}));\r\n}","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { MdKeyboardBackspace } from \"react-icons/md\";\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from '../../actions/authActions';\r\nimport classnames from 'classnames';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {}\r\n        }\r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register Page, it should redirect to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value})\r\n    }\r\n    \r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        }\r\n\r\n        console.log(newUser)\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\"><MdKeyboardBackspace /> Back To Home</Link>\r\n                    </div>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\"}}>\r\n                        <h4>\r\n                            <b>Register</b> below\r\n                        </h4>\r\n                        <p className=\"grey-text text-darken-1\">Already have an account? <Link to=\"/login\">Log In</Link></p>\r\n                    </div>\r\n                    <form noValidate onSubmit={this.onSubmit}>\r\n                        <div className=\"input-field col s12\">\r\n                            <input onChange={this.onChange} value={this.state.name} error={errors.name} id=\"name\" type=\"text\" className={classnames(\"\", { invalid: errors.name })} />\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <span className=\"red-text\">{errors.name}</span>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input onChange={this.onChange} value={this.state.email} error={errors.email} id=\"email\" type=\"email\" className={classnames(\"\", { invalid: errors.email })} />\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <span className=\"red-text\">{errors.email}</span>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input onChange={this.onChange} value={this.state.password} error={errors.password} id=\"password\" type=\"password\" className={classnames(\"\", { invalid: errors.password })} />\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <span className=\"red-text\">{errors.password}</span>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input onChange={this.onChange} value={this.state.password2} error={errors.password2} id=\"password2\" type=\"password\" className={classnames(\"\", { invalid: errors.password2 })}/>\r\n                            <label htmlFor=\"password2\">Confirm Password</label>\r\n                            <span className=\"red-text\">{errors.password2}</span>\r\n                        </div>\r\n                        <div className=\"col s12\" style={{paddingLeft: \"11.250px\"}}>\r\n                            <button style={{width: \"150px\", borderRadius: \"3px\", letterSpacing: \"1.5px\", marginTop: \"1rem\"}} className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                                Sign Up\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n) (withRouter(Register))","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MdKeyboardBackspace } from \"react-icons/md\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../actions/authActions';\r\nimport classnames from 'classnames'\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Login Page, it should redirect to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\") //push user to dashboard when sucessfully logged in.\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        this.props.loginUser(userData)\r\n\r\n        console.log(userData)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n              <div className=\"col s8 offset-s2\">\r\n                <Link to=\"/\" className=\"btn-flat waves-effect\"><MdKeyboardBackspace/> Back to home</Link>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                  <h4>\r\n                    <b>Login</b> below\r\n                  </h4>\r\n                  <p className=\"grey-text text-darken-1\">\r\n                    Don't have an account? <Link to=\"/register\">Register</Link>\r\n                  </p>\r\n                </div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <div className=\"input-field col s12\">\r\n                    <input onChange={this.onChange} value={this.state.email} error={errors.email} id=\"email\" type=\"email\" className={classnames(\"\", { invalid: errors.email || errors.emailnotfound})}/>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <span className=\"red-text\">\r\n                        {errors.email}\r\n                        {errors.emailnotfound}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"input-field col s12\">\r\n                    <input onChange={this.onChange} value={this.state.password} error={errors.password} id=\"password\" type=\"password\" className={classnames(\"\", { invalid: errors.password || errors.passwordincorrect})}/>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <span className=\"red-text\">\r\n                        {errors.password}\r\n                        {errors.passwordincorrect}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <button style={{ width: \"150px\", borderRadius: \"3px\", letterSpacing: \"1.5px\", marginTop: \"1rem\"}} type=\"submit\" className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n)(Login);","import { SET_CURRENT_USER, USER_LOADING } from '../actions/types';\r\n\r\nconst isEmpty = require('is-empty');\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route {...rest} render={props => auth.isAuthenticated === true ? ( <Component {...props} /> ) : (<Redirect to=\"/login\" /> )} />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../actions/authActions';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() { \r\n\r\n        const { user } = this.props.auth;\r\n\r\n        return ( \r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4>\r\n                            <b>Hey there,</b> {user.name.split(\" \")[0]}\r\n                            <p className=\"flow-text grey-text text-darken-1\">\r\n                                You are logged into a full-stack{\" \"}<span style={{fontFamily: \"monospace\"}}>MERN</span>app\r\n                            </p>\r\n                        </h4>\r\n                        <button style={{width: \"150px\", borderRadius: \"3px\", letterSpacing: \"1.5px\", marginTop: \"1rem\"}} onClick={this.onLogoutClick} className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n \r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(Dashboard);","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Landing from './components/Landing';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from './actions/authActions';\r\nimport PrivateRoute from './components/private-route/PrivateRoute';\r\nimport Dashboard from \"./pages/dashboard/\"\r\nimport './App.css';\r\n\r\n// Check localStorage for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken\r\n  setAuthToken(token)\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token)\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded))\r\n\r\n  // Checks for an iexpired token\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    alert(\"Your session has expired. Please login again\")\r\n    //Logout User\r\n    store.dispatch(logoutUser());\r\n    // Redirect to Login\r\n    window.location.href = \"./login\"\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar/>\r\n          <Route exact path=\"/\" component={Landing}/>\r\n          <Route exact path=\"/register\" component={Register}/>\r\n          <Route exact path=\"/login\" component={Login}/>\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}